#Область ПрограммныйИнтерфейс

// Общие методы
Функция ПолучитьПредставлениеПовторения(СтруктураПовтор) Экспорт
	
	ПовторПредставление = "";
	
	Если СтруктураПовтор.ПовторПериодичность = 1 Тогда
		ПовторПредставление = ?(СтруктураПовтор.ПовторИнтервал = 1, "каждый", "кажд. " + Формат(СтруктураПовтор.ПовторИнтервал, "ЧГ=")) + " день";
	ИначеЕсли СтруктураПовтор.ПовторПериодичность = 2 Тогда
		ПовторПредставление = "каждую неделю - по рабочим дням";
	ИначеЕсли СтруктураПовтор.ПовторПериодичность = 3 Тогда
		ПовторПредставление = "каждую неделю - понедельник, среда, пятница";
	ИначеЕсли СтруктураПовтор.ПовторПериодичность = 4 Тогда
		ПовторПредставление = "каждую неделю - вторник, четверг";
	ИначеЕсли СтруктураПовтор.ПовторПериодичность = 5 Тогда
		ПовторПредставление = ?(СтруктураПовтор.ПовторИнтервал = 1, "каждую", "кажд. " + Формат(СтруктураПовтор.ПовторИнтервал, "ЧГ=")) + ?(СтруктураПовтор.ПовторИнтервал = 1, " неделю", " нед.");
		
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтруктураПовтор.ПовторДниПовторения, ",");
		пн = НЕ (МассивПодстрок.Найти("1") = Неопределено);
		вт = НЕ (МассивПодстрок.Найти("2") = Неопределено);
		ср = НЕ (МассивПодстрок.Найти("3") = Неопределено);
		чт = НЕ (МассивПодстрок.Найти("4") = Неопределено);
		пт = НЕ (МассивПодстрок.Найти("5") = Неопределено);
		сб = НЕ (МассивПодстрок.Найти("6") = Неопределено);
		вс = НЕ (МассивПодстрок.Найти("7") = Неопределено);
		
		Если пн и вт и ср и чт и пт и не сб и не вс Тогда
			ПовторПредставление = ПовторПредставление + " - по рабочим дням";
		ИначеЕсли пн и вт и ср и чт и пт и сб и вс Тогда
			ПовторПредставление = ПовторПредставление + " - каждый день";
		Иначе 
			Если пн Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "понедельник";
			КонецЕсли;
			Если вт Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "вторник";
			КонецЕсли;
			Если ср Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "среда";
			КонецЕсли;
			Если чт Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "четверг";
			КонецЕсли;
			Если пт Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "пятница";
			КонецЕсли;
			Если сб Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "суббота";
			КонецЕсли;
			Если вс Тогда
				ПовторПредставление = ПовторПредставление + ?(ПовторПредставление = "каждую неделю", " - ", ", ") + "воскресенье";
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СтруктураПовтор.ПовторПериодичность = 6 Тогда
		ПовторПредставление = ?(СтруктураПовтор.ПовторИнтервал = 1, "каждый", "кажд. " + Формат(СтруктураПовтор.ПовторИнтервал, "ЧГ=")) + ?(СтруктураПовтор.ПовторИнтервал = 1, " месяц", " мес.");
		
		ДеньМесяцаДеньНедели = Число(СтруктураПовтор.ПовторДниПовторения);
		
		Если СтруктураПовтор.ПовторНачало <> Дата(1, 1, 1) Тогда
			
			Если ДеньМесяцаДеньНедели = 1 Тогда
				ПовторПредставление = ПовторПредставление + " - " + Строка(День(СтруктураПовтор.ПовторНачало)) + "-го числа";
			ИначеЕсли ДеньМесяцаДеньНедели = 2 Тогда
				НомерДняНедели	= ДеньНедели(СтруктураПовтор.ПовторНачало);
				ПоправкаНедели 	= ?(НомерДняНедели >= ДеньНедели(НачалоМесяца(СтруктураПовтор.ПовторНачало)), 1, 0);
				Счетчик			= НеделяГода(СтруктураПовтор.ПовторНачало) - НеделяГода(НачалоМесяца(СтруктураПовтор.ПовторНачало)) + ПоправкаНедели;
				Количество		= НеделяГода(КонецМесяца(СтруктураПовтор.ПовторНачало)) - НеделяГода(НачалоМесяца(СтруктураПовтор.ПовторНачало)) + ПоправкаНедели;
				
				Если НомерДняНедели = 1 Тогда
					ПовторПредставление = ПовторПредставление + " понедельник";
				ИначеЕсли НомерДняНедели = 2 Тогда
					ПовторПредставление = ПовторПредставление + " вторник";
				ИначеЕсли НомерДняНедели = 3 Тогда
					ПовторПредставление = ПовторПредставление + " среда";
				ИначеЕсли НомерДняНедели = 4 Тогда
					ПовторПредставление = ПовторПредставление + " четверг";
				ИначеЕсли НомерДняНедели = 5 Тогда
					ПовторПредставление = ПовторПредставление + " пятница";
				ИначеЕсли НомерДняНедели = 6 Тогда
					ПовторПредставление = ПовторПредставление + " суббота";
				ИначеЕсли НомерДняНедели = 7 Тогда
					ПовторПредставление = ПовторПредставление + " воскресенье";
				КонецЕсли;
				
				ПовторПредставление = ПовторПредставление + " кажд.";
				
				Если Счетчик = Количество Тогда
					ПовторПредставление = ПовторПредставление + " последн.";
				Иначе
					ПовторПредставление = ПовторПредставление + " " + Строка(Счетчик) + " недели";
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтруктураПовтор.ПовторПериодичность = 7 Тогда
		ПовторПредставление = ?(СтруктураПовтор.ПовторИнтервал = 1, "каждый", "кажд. " + Формат(СтруктураПовтор.ПовторИнтервал, "ЧГ=")) + ?(СтруктураПовтор.ПовторИнтервал = 1, " год", " года (лет)") + " " + Формат(СтруктураПовтор.ПовторНачало, "ДФ='dd MMMM'");
	КонецЕсли;
	
	Если СтруктураПовтор.ПовторВидОкончания = 1 Тогда
		ПовторПредставление = ПовторПредставление + ", " + Формат(СтруктураПовтор.ПовторКоличество, "ЧГ=") + " раз(а)";
	ИначеЕсли СтруктураПовтор.ПовторВидОкончания = 2 Тогда
		ПовторПредставление = ПовторПредставление + ", до " + Формат(СтруктураПовтор.ПовторОкончание, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	Возврат ПовторПредставление;
	
КонецФункции

Функция СобытиеЖурналаРегистрации() Экспорт
	Возврат НСтр("ru = 'Планировщик'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
КонецФункции

// Универсальные структуры
Функция ПолучитьСтруктуруНапоминания() Экспорт
	Структура = Новый Структура;
	Структура.Вставить("Пользователь"		, Неопределено);
	Структура.Вставить("Идентификатор"		, ПланировщикКлиентСервер.ПустойИдентификатор());
	Структура.Вставить("Вид"				, 0);
	Структура.Вставить("Интервал"			, 0);
	Структура.Вставить("ВидИнтервала"		, 0);
	Структура.Вставить("ИнтервалСекунды"	, 0);
	
	Возврат Структура;
КонецФункции

Функция ПолучитьСтруктуруУчастника() Экспорт
	Структура = Новый Структура;
	Структура.Вставить("Идентификатор"			, ПланировщикКлиентСервер.ПустойИдентификатор());
	Структура.Вставить("ВидУчастника"			, Неопределено);
	Структура.Вставить("Участник"				, Неопределено);
	Структура.Вставить("Представление"			, "");
	Структура.Вставить("ОригинальноеСобытие"	, Неопределено);
	Структура.Вставить("Календарь"				, Неопределено);
	Структура.Вставить("АдресЭлектроннойПочты"	, "");
	Структура.Вставить("Обязательно"			, Ложь);
	Структура.Вставить("Организатор"			, Ложь);
	Структура.Вставить("Синхронизировать"		, Ложь);
	Структура.Вставить("Уведомлять"				, Ложь);
	Структура.Вставить("Ответ"					, 0);
	Структура.Вставить("Комментарий"			, "");
	Структура.Вставить("Отправлено"				, Ложь);
	
	Возврат Структура;
КонецФункции

Функция ПолучитьСтруктуруПовторения() Экспорт
	СтруктураПовторения = Новый Структура;
	СтруктураПовторения.Вставить("Повторять"			, Ложь);
	СтруктураПовторения.Вставить("ПовторВидОкончания"	, 0);
	СтруктураПовторения.Вставить("ПовторДниПовторения"	, "");
	СтруктураПовторения.Вставить("ПовторИнтервал"		, 1);
	СтруктураПовторения.Вставить("ПовторКоличество"		, 0);
	СтруктураПовторения.Вставить("ПовторНачало"			, Дата(1, 1, 1));
	СтруктураПовторения.Вставить("ПовторОкончание"		, Дата(1, 1, 1));
	СтруктураПовторения.Вставить("ПовторПериодичность"	, 0);
	СтруктураПовторения.Вставить("ПовторПредставление"	, "");
	
	Возврат СтруктураПовторения;
КонецФункции

Функция ПолучитьСтруктуруСобытия() Экспорт
	Описание = Новый Структура;
	Описание.Вставить("Владелец"					, "");
	Описание.Вставить("Ссылка"						, Неопределено);
	Описание.Вставить("Код"							, "");
	Описание.Вставить("Наименование"				, "");
	Описание.Вставить("ВесьДень"					, Ложь);
	Описание.Вставить("ЗадачаИсполнителя"			, Неопределено);
	Описание.Вставить("Календарь"					, Неопределено);
	Описание.Вставить("МестоСобытия"				, "");
	Описание.Вставить("МестоСобытияЗначенияПолей"	, "");
	Описание.Вставить("НачалоСобытия"				, Дата(1, 1, 1));
	Описание.Вставить("ОкончаниеСобытия"			, Дата(1, 1, 1));
	Описание.Вставить("ОригинальноеНачалоСобытия"	, Дата(1, 1, 1));
	Описание.Вставить("ОригинальноеСобытие"			, Неопределено);
	Описание.Вставить("НастройкаПовтора"			, ПолучитьСтруктуруПовторения());
	Описание.Вставить("Содержание"					, "");
	Описание.Вставить("Статус"						, Неопределено);
	Описание.Вставить("ЦветФона"					, Неопределено);
	Описание.Вставить("Напоминания"					, Новый Массив);
	Описание.Вставить("Участники"					, Новый Массив);
	
	Возврат Описание;
КонецФункции

Функция ПолучитьПараметрыСобытияПриЗаписи() Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("Новое", Ложь);
	Структура.Вставить("Копия", Ложь);
	Структура.Вставить("Источник", Неопределено);
	
	Возврат Структура;
	
КонецФункции

// Возвращает массив с номерами дней недели которые не входят в повторения
//
// Реквизиты - Тип: Структура
//	ПовторПериодичность - Тип: Число. Периодичность повторений
//	ПовторДниПовторения - Тип: Строка. Дни недели повторений
//
// Возвращаемое значение:
//	Массив[Число]
//
Функция ПолучитьДниНеделиБезПовторений(Реквизиты) Экспорт
	
	ДниНеделиПропуск = Новый Массив;
	
	Если НЕ Реквизиты.Свойство("ПовторПериодичность")
		ИЛИ НЕ Реквизиты.Свойство("ПовторДниПовторения") Тогда
		
		Возврат ДниНеделиПропуск;
		
	КонецЕсли;
	
	Если Реквизиты.ПовторПериодичность = 2 Тогда
		ДниНеделиПропуск.Добавить(6);
		ДниНеделиПропуск.Добавить(7);
	ИначеЕсли Реквизиты.ПовторПериодичность = 3 Тогда
		ДниНеделиПропуск.Добавить(2);
		ДниНеделиПропуск.Добавить(4);
		ДниНеделиПропуск.Добавить(6);
		ДниНеделиПропуск.Добавить(7);
	ИначеЕсли Реквизиты.ПовторПериодичность = 4 Тогда
		ДниНеделиПропуск.Добавить(1);
		ДниНеделиПропуск.Добавить(3);
		ДниНеделиПропуск.Добавить(5);
		ДниНеделиПропуск.Добавить(6);
		ДниНеделиПропуск.Добавить(7);
	ИначеЕсли Реквизиты.ПовторПериодичность = 5 Тогда
		Для Индекс = 1 По 7 Цикл
			Если Найти(Реквизиты.ПовторДниПовторения, Строка(Индекс)) = 0 Тогда
				ДниНеделиПропуск.Добавить(Индекс);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДниНеделиПропуск;
	
КонецФункции

// Возвращает строку представления периода по переданным параметрам
//
// Параметры:
//	НачалоСобытия - Тип: Дата.
//	ОкончаниеСобытия - Тип: Дата.
//	ВесьДень - Тип: Булево
//
// Возвращаемое значение:
//	Строка
//
Функция ПолучитьПредставлениеПериода(НачалоСобытия, ОкончаниеСобытия, ВесьДень) Экспорт
	НачНомерДняНедели = ДеньНедели(НачалоСобытия);
	КонНомерДняНедели = ДеньНедели(ОкончаниеСобытия);
	
	НачНомерМесяца = Месяц(НачалоСобытия);
	КонНомерМесяца = Месяц(ОкончаниеСобытия);
	
	НачСтрПериод = ПредставлениеДняНедели(НачНомерДняНедели);
	КонСтрПериод = ПредставлениеДняНедели(КонНомерДняНедели);
	
	НачСтрПериод = НачСтрПериод + ", " + Формат(НачалоСобытия, "ДФ=d") + " ";
	КонСтрПериод = КонСтрПериод + ", " + Формат(ОкончаниеСобытия, "ДФ=d") + " ";
	
	НачСтрПериод = НачСтрПериод + ПредставлениеМесяца(НачНомерМесяца);
	КонСтрПериод = КонСтрПериод + ПредставлениеМесяца(КонНомерМесяца);
	
	НачСтрВремя	= Формат(НачалоСобытия, "ДФ=HH:mm");
	КонСтрВремя = Формат(ОкончаниеСобытия, "ДФ=HH:mm");
	
	ОдинДень = (НачалоДня(НачалоСобытия) = НачалоДня(ОкончаниеСобытия));
	
	Если ВесьДень Тогда
		СтрПериод = НачСтрПериод + "." + ?(ОдинДень, "", " - " + КонСтрПериод + ".") + НСтр("ru=' весь день'");
	Иначе 
		СтрПериод = НачСтрПериод + "., " + НачСтрВремя + " - " + ?(ОдинДень, "", КонСтрПериод + "., ") + КонСтрВремя;
	КонецЕсли;
	
	Возврат СтрПериод;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеДняНедели(НомерДняНедели)
	
	СтрПериод = "";
	
	Если НомерДняНедели = 1 Тогда
		СтрПериод = СтрПериод + "пн";
	ИначеЕсли НомерДняНедели = 2 Тогда
		СтрПериод = СтрПериод + "вт";
	ИначеЕсли НомерДняНедели = 3 Тогда
		СтрПериод = СтрПериод + "ср";
	ИначеЕсли НомерДняНедели = 4 Тогда
		СтрПериод = СтрПериод + "чт";
	ИначеЕсли НомерДняНедели = 5 Тогда
		СтрПериод = СтрПериод + "пт";
	ИначеЕсли НомерДняНедели = 6 Тогда
		СтрПериод = СтрПериод + "сб";
	ИначеЕсли НомерДняНедели = 7 Тогда
		СтрПериод = СтрПериод + "вс";
	КонецЕсли;
	
	Возврат СтрПериод;
	
КонецФункции

Функция ПредставлениеМесяца(НомерМесяца)
	
	СтрПериод = "";
	
	Если НомерМесяца = 1 Тогда
		СтрПериод = СтрПериод + "янв";
	ИначеЕсли НомерМесяца = 2 Тогда
		СтрПериод = СтрПериод + "фев";
	ИначеЕсли НомерМесяца = 3 Тогда
		СтрПериод = СтрПериод + "мар";
	ИначеЕсли НомерМесяца = 4 Тогда
		СтрПериод = СтрПериод + "апр";
	ИначеЕсли НомерМесяца = 5 Тогда
		СтрПериод = СтрПериод + "май";
	ИначеЕсли НомерМесяца = 6 Тогда
		СтрПериод = СтрПериод + "июн";
	ИначеЕсли НомерМесяца = 7 Тогда
		СтрПериод = СтрПериод + "июл";
	ИначеЕсли НомерМесяца = 8 Тогда
		СтрПериод = СтрПериод + "авг";
	ИначеЕсли НомерМесяца = 9 Тогда
		СтрПериод = СтрПериод + "сен";
	ИначеЕсли НомерМесяца = 10 Тогда
		СтрПериод = СтрПериод + "окт";
	ИначеЕсли НомерМесяца = 11 Тогда
		СтрПериод = СтрПериод + "нояб";
	ИначеЕсли НомерМесяца = 12 Тогда
		СтрПериод = СтрПериод + "дек";
	КонецЕсли;
	
	Возврат СтрПериод; 
	
КонецФункции

#КонецОбласти
