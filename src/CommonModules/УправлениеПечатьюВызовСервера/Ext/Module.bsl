////////////////////////////////////////////////////////////////////////////////
// Подсистема "Печать".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Работа с шаблонами офисных документов

// Получает за один вызов всю необходимую информацию для печати: данные объектов по макетам, двоичные
// данные макетов, описание областей макетов.
// Для вызова из клиентских модулей печати форм по макетам офисных документов.
//
// Параметры:
//   ИмяМенеджераПечати - Строка - имя для обращения к менеджеру объекта, например "Документ.<Имя документа>".
//   ИменаМакетов       - Строка - имена макетов, по которым будут формироваться печатные формы.
//   СоставДокументов   - Массив - ссылки на объекты информационной базы (должны быть одного типа).
//
Функция МакетыИДанныеОбъектовДляПечати(Знач ИмяМенеджераПечати, Знач ИменаМакетов, Знач СоставДокументов) Экспорт
	
	Возврат УправлениеПечатью.МакетыИДанныеОбъектовДляПечати(ИмяМенеджераПечати, ИменаМакетов, СоставДокументов);
	
КонецФункции

// Устарела. Следует использовать МакетыИДанныеОбъектовДляПечати.
//
Функция ПолучитьМакетыИДанныеОбъектов(Знач ИмяМенеджераПечати, Знач ИменаМакетов, Знач СоставДокументов) Экспорт
	
	Возврат УправлениеПечатью.МакетыИДанныеОбъектовДляПечати(ИмяМенеджераПечати, ИменаМакетов, СоставДокументов);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Сформировать печатные формы для непосредственного вывода на принтер
//
// Подробнее - см. описание УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати().
//
Процедура СформироватьПечатныеФормыДляБыстройПечати(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов,
	ПараметрыПечати, ТабличныеДокументы, ОбъектыПечати, ПараметрыВывода, Отказ) Экспорт
	
	УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечати(
		ИмяМенеджераПечати,
		ИменаМакетов,
		МассивОбъектов,
		ПараметрыПечати,
		ТабличныеДокументы,
		ОбъектыПечати,
		ПараметрыВывода,
		Отказ);
	
КонецПроцедуры

// Сформировать печатные формы для непосредственного вывода на принтер в обычном приложении
//
// Подробнее - см. описание УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение().
//
Процедура СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение(ИмяМенеджераПечати, ИменаМакетов, МассивОбъектов,
	ПараметрыПечати, Адрес, ОбъектыПечати, ПараметрыВывода, Отказ) Экспорт
	
	УправлениеПечатью.СформироватьПечатныеФормыДляБыстройПечатиОбычноеПриложение(
		ИмяМенеджераПечати,
		ИменаМакетов,
		МассивОбъектов,
		ПараметрыПечати,
		Адрес,
		ОбъектыПечати,
		ПараметрыВывода,
		Отказ);
	
КонецПроцедуры

// Сохраняет во временное хранилище путь к каталогу, который используется при печати.
//
// Подробнее - см. описание УправлениеПечатью.СохранитьЛокальныйКаталогФайловПечати().
//
Процедура СохранитьЛокальныйКаталогФайловПечати(Каталог) Экспорт
	
	УправлениеПечатью.СохранитьЛокальныйКаталогФайловПечати(Каталог);
	
КонецПроцедуры

// Возвращает описание команды по имени элемента формы.
// 
// См. УправлениеПечатью.ОписаниеКомандыПечати
//
Функция ОписаниеКомандыПечати(ИмяКоманды, АдресКомандПечатиВоВременномХранилище) Экспорт
	
	Возврат УправлениеПечатью.ОписаниеКомандыПечати(ИмяКоманды, АдресКомандПечатиВоВременномХранилище);
	
КонецФункции

// Возвращает истину, если есть право проведения хотя бы для одного документа.
Функция ДоступноПравоПроведения(СписокДокументов) Экспорт
	Возврат УправлениеПечатью.ДоступноПравоПроведения(СписокДокументов);
КонецФункции

// См. УправлениеПечатью.ПакетДокументов.
Функция ПакетДокументов(ТабличныеДокументы, ОбъектыПечати, ПечататьКомплектами, КоличествоЭкземпляров = 1) Экспорт
	
	Возврат УправлениеПечатью.ПакетДокументов(ТабличныеДокументы, ОбъектыПечати,
		ПечататьКомплектами, КоличествоЭкземпляров);
	
КонецФункции

// Сообщение о недоступности команды печати для выбранного объекта.
Функция СообщениеОПредназначенииКомандыПечати(ТипыОбъектовПечати) Экспорт
	ТекстСообщения = НСтр("ru = 'Выбранная команда печати предназначена для документов:'") + Символы.ПС;
	Для Каждого Тип Из ТипыОбъектовПечати Цикл
		ТекстСообщения = ТекстСообщения + Метаданные.НайтиПоТипу(Тип).Представление() + Символы.ПС;
	КонецЦикла;
	Возврат СокрЛП(ТекстСообщения);
КонецФункции

#КонецОбласти
