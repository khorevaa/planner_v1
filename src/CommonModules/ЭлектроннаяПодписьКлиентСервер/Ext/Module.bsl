////////////////////////////////////////////////////////////////////////////////
// Подсистема "Электронная подпись"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получает представление поля КомуВыдан или КемВыдан сертификата.
//
// Параметры:
//   СтруктураПользователя - Структура - Структура поля КомуВыдан или КемВыдан сертификата.
//
// Возвращаемое значение:
//   Строка - Представление поля.
//
Функция ПолучитьПредставлениеПользователя(СтруктураПользователя) Экспорт
	Перем SN, GN, T, CN, O, OU;
	
	Если СтруктураПользователя.Свойство("SN", SN) Тогда
		// Усиленный сертификат - чтение ФИО из тегов SN и G.
		СтруктураПользователя.Свойство("GN", GN);
		СтруктураПользователя.Свойство("T", T);
		СтруктураПользователя.Свойство("CN", CN);
		СтруктураПользователя.Свойство("OU", OU);
		
		Представление = Строка(SN);
		Если ЗначениеЗаполнено(GN) Тогда
			Представление = Представление + " " + GN;
		КонецЕсли;
		Если ЗначениеЗаполнено(T) Тогда
			Представление = Представление + ", " + T;
		КонецЕсли;
		Если ЗначениеЗаполнено(CN) Тогда
			Представление = Представление + ", " + CN;
		КонецЕсли;
		Если ЗначениеЗаполнено(OU) Тогда
			Представление = Представление + ", " + OU;
		КонецЕсли;
	Иначе
		// Чтение ФИО из тега CN.
		СтруктураПользователя.Свойство("CN", CN);
		СтруктураПользователя.Свойство("O", O);
		СтруктураПользователя.Свойство("OU", OU);
		
		Представление = Строка(CN);
		Если ЗначениеЗаполнено(O) И O <> CN Тогда
			Представление = Представление + ", " + O;
		КонецЕсли;
		Если ЗначениеЗаполнено(OU) Тогда
			Представление = Представление + ", " + OU;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

// Заполняет структуру полями сертификата.
//
// Параметры:
//   Сертификат - СертификатКриптографии - Сертификат криптографии.
//
// Возвращаемое значение:
//   Структура - Структура с полями сертификата.
//
Функция ЗаполнитьСтруктуруСертификата(Сертификат) Экспорт
	
	КомуВыдан = ПолучитьПредставлениеПользователя(Сертификат.Субъект);
	КемВыдан = ПолучитьПредставлениеПользователя(Сертификат.Издатель);
	ДействителенДо = Сертификат.ДатаОкончания;
	
	EKU = Неопределено;
	Назначение = "";
	Если Сертификат.РасширенныеСвойства.Свойство("EKU", EKU) Тогда
		Назначение = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(ПолучитьНазначение(EKU));
	КонецЕсли;	
	
	Отпечаток = Base64Строка(Сертификат.Отпечаток);
	
	КомуВыдан = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(КомуВыдан);
	КемВыдан = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(КемВыдан);
	
	СтруктураВозврата = Новый Структура("КомуВыдан, КемВыдан, ДействителенДо, Назначение, Отпечаток",
		КомуВыдан, КемВыдан, ДействителенДо, Назначение, Отпечаток);
		
	Возврат СтруктураВозврата;
КонецФункции

// Возвращает структуру, содержащую различные персональные настройки.
//
// Возвращаемое значение:
//   Структура - Персональные настройки для работы с электронной подписью.
//       * ДействияПриСохраненииСЭП - Строка - Что делать при сохранении файлов с электронной подписью:
//           ** "Спрашивать" - Показывать диалог выбора подписей для сохранения.
//           ** "СохранятьВсеПодписи" - Всегда все подписи.
//       * ПутьМодуляКриптографии - Строка - Путь модуля.
//       * РасширениеДляФайловПодписи - Строка - Расширение для файлов ЭП.
//       * РасширениеДляЗашифрованныхФайлов - Строка - Расширение для зашифрованных файлов.
//       * ОтпечатокЛичногоСертификатаДляШифрования - Строка - Отпечаток личного сертификата.
//
// См. также:
//   ОбщаяФорма.ПерсональныеНастройкиЭП - место ввода данных параметров и их пользовательские представления.
//
Функция ПерсональныеНастройки() Экспорт
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		Возврат ЭлектроннаяПодпись.ПерсональныеНастройки();
	#Иначе
		Возврат СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ЭлектроннаяПодпись.ПерсональныеНастройки;
	#КонецЕсли
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает назначение сертификата.
//
// Параметры:
//   ФиксированныйМассивСвойств - ФиксированныйМассив - массив расширенных свойств сертификата (EKU).
//
Функция ПолучитьНазначение(ФиксированныйМассивСвойств)
	
	Назначение = "";
	
	Для Индекс = 0 По ФиксированныйМассивСвойств.Количество() - 1 Цикл
		Назначение = Назначение + ФиксированныйМассивСвойств.Получить(Индекс);
		Назначение = Назначение + Символы.ПС;
	КонецЦикла;	
	
	Возврат Назначение;
	
КонецФункции

// Возвращает структуру, содержащую различные общие настройки.
//
// Возвращаемое значение:
//   См. ЭлектроннаяПодпись.ОбщиеНастройки().
//
// См. также:
//   ОбщаяФорма.НастройкиКриптографии - место определения данных параметров и их текстовые описания.
//
Функция ОбщиеНастройки() Экспорт
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		Возврат ЭлектроннаяПодпись.ОбщиеНастройки();
	#Иначе
		Возврат СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ЭлектроннаяПодпись.ОбщиеНастройки;
	#КонецЕсли
КонецФункции

#КонецОбласти
