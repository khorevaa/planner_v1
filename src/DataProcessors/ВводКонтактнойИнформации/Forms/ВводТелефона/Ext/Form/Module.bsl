// Форма параметризуется:
//
//      Заголовок     - Строка  - заголовок формы
//      ЗначенияПолей - Строка  - сериализованное значение контактной информации или пустая строка для 
//                                ввода нового
//      Представление - Строка  - представление адреса (используется только при работе со старыми данными)
//      ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации, Структура - описание того, что мы редактируем
//      Комментарий  - Строка   - необязательный комментарий, для подстановки в поле "Комментарий"
//
//      ВозвращатьСписокЗначений - Булево - необязательный флаг того, что возвращаемое значение поля 
//                                 КонтактнаяИнформация будет иметь тип СписокЗначений (совместимость)
//
//  Результат выбора:
//      Структура - поля:
//          * КонтактнаяИнформация   - Строка - XML контактной информации
//          * Представление          - Строка - Представление
//          * Комментарий            - Строка - Комментарий
//
// -------------------------------------------------------------------------------------------------

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВозвращатьСписокЗначений", ВозвращатьСписокЗначений);
	
	// Разбор параметров в реквизиты
	ВидКонтактнойИнформации = Параметры.ВидКонтактнойИнформации;
	ТипКонтактнойИнформации = ВидКонтактнойИнформации.Тип;
	
	ПроверятьКорректность      = ВидКонтактнойИнформации.ПроверятьКорректность;
	ЗапрещатьВводНекорректного = ВидКонтактнойИнформации.ЗапрещатьВводНекорректного;
	
	Заголовок = ?(ПустаяСтрока(Параметры.Заголовок), Строка(ВидКонтактнойИнформации), Параметры.Заголовок);
	
	Если КонтактнаяИнформацияКлиентСервер.ЭтоСтрокаXML(Параметры.ЗначенияПолей) Тогда
		РезультатыЧтения = Новый Структура;
		XDTOКонтактная = КонтактнаяИнформацияСлужебный.ДесериализацияКонтактнойИнформации(Параметры.ЗначенияПолей, ТипКонтактнойИнформации, РезультатыЧтения);
		Если РезультатыЧтения.Свойство("ТекстОшибки") Тогда
			// Распознали с ошибками, сообщим при открытии
			ТекстПредупрежденияПриОткрытии = РезультатыЧтения.ТекстОшибки;
			XDTOКонтактная.Представление   = Параметры.Представление;
		КонецЕсли;
		
	ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		XDTOКонтактная = КонтактнаяИнформацияСлужебный.ДесериализацияТелефона(Параметры.ЗначенияПолей, Параметры.Представление, ТипКонтактнойИнформации);
		
	Иначе
		XDTOКонтактная = КонтактнаяИнформацияСлужебный.ДесериализацияФакса(Параметры.ЗначенияПолей, Параметры.Представление, ТипКонтактнойИнформации);
		
	КонецЕсли;
	
	Если Параметры.Комментарий <> Неопределено Тогда
		КонтактнаяИнформацияСлужебный.КомментарийКонтактнойИнформации(XDTOКонтактная, Параметры.Комментарий);
	КонецЕсли;
	
	ЗначениеРеквизитовПоКонтактнойИнформации(XDTOКонтактная);
	
	// Группа команд "все действия" зависит от интерфейса
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Такси Тогда
		Элементы.ФормаВсеДействия.Видимость = Ложь;
	Иначе
		Элементы.ОчиститьТелефон.Видимость = Ложь;
		Элементы.ИзменитьФорму.Видимость   = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПиктограммуКомментария();

	Если Не ПустаяСтрока(ТекстПредупрежденияПриОткрытии) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПредупредитьПослеОткрытияФормы", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПодтвердитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодСтраныПриИзменении(Элемент)
	
	ЗаполнитьПредставлениеТелефона();
	
КонецПроцедуры

&НаКлиенте
Процедура КодГородаПриИзменении(Элемент)
	
	ЗаполнитьПредставлениеТелефона();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаПриИзменении(Элемент)
	
	ЗаполнитьПредставлениеТелефона();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавочныйПриИзменении(Элемент)
	
	ЗаполнитьПредставлениеТелефона();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	УстановитьПиктограммуКомментария();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	ПодтвердитьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТелефон(Команда)
	
	ОчиститьТелефонСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПредупредитьПослеОткрытияФормы()
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстПредупрежденияПриОткрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПиктограммуКомментария()
	
	Если ПустаяСтрока(Комментарий) Тогда
		Элементы.ТелефонСтраницаКомментарий.Картинка = Новый Картинка;
	Иначе
		Элементы.ТелефонСтраницаКомментарий.Картинка = БиблиотекаКартинок.Комментарий;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	// При немодифицированности работает "отмена"
	
	Если Модифицированность Тогда
		// Изменено значение адреса 
		
		ЕстьОшибкиЗаполнения = Ложь;
		// Смотрим, надо ли проверять на корректность.
		Если ПроверятьКорректность Тогда
			СписокОшибок = ОшибкиЗаполненияТелефонаСервер();
			ЕстьОшибкиЗаполнения = СписокОшибок.Количество()>0;
		КонецЕсли;
		Если ЕстьОшибкиЗаполнения Тогда
			СообщитьОбОшибкахЗаполнения(СписокОшибок);
			Если ЗапрещатьВводНекорректного Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Результат = РезультатВыбора();
		
		СброситьМодифицированностьПриВыборе();
		ОповеститьОВыборе(Результат);
		
	ИначеЕсли Комментарий<>КопияКомментария Тогда
		// Изменен только комментарий, пробуем вернуть обновленное
		Результат = РезультатВыбораТолькоКомментария();
		
		СброситьМодифицированностьПриВыборе();
		ОповеститьОВыборе(Результат);
		
	Иначе
		Результат = Неопределено;
		
	КонецЕсли;
	
	Если (МодальныйРежим Или ЗакрыватьПриВыборе) И Открыта() Тогда
		СброситьМодифицированностьПриВыборе();
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьМодифицированностьПриВыборе()
	
	Модифицированность = Ложь;
	КопияКомментария   = Комментарий;
	
КонецПроцедуры

&НаСервере
Функция РезультатВыбора()
	XDTOИнформация = КонтактнаяИнформацияПоЗначениюРеквизитов();
	
	Если ВозвращатьСписокЗначений Тогда
		ДанныеВыбора = КонтактнаяИнформацияСлужебный.КонтактнаяИнформацияВСтаруюСтруктуру(XDTOИнформация);
		ДанныеВыбора = ДанныеВыбора.ЗначенияПолей;
	Иначе
		ДанныеВыбора = КонтактнаяИнформацияСлужебный.СериализацияКонтактнойИнформации(XDTOИнформация);
	КонецЕсли;
		
	Возврат Новый Структура("КонтактнаяИнформация, Представление, Комментарий",
		ДанныеВыбора,
		XDTOИнформация.Представление, 
		XDTOИнформация.Комментарий);
КонецФункции

&НаСервере
Функция РезультатВыбораТолькоКомментария()
	
	КонтактнаяИнфо = Параметры.ЗначенияПолей;
	Если ПустаяСтрока(КонтактнаяИнфо) Тогда
		Если ТипКонтактнойИнформации=Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			КонтактнаяИнфо = КонтактнаяИнформацияСлужебный.ДесериализацияТелефона("", "", ТипКонтактнойИнформации);
		Иначе
			КонтактнаяИнфо = КонтактнаяИнформацияСлужебный.ДесериализацияФакса("", "", ТипКонтактнойИнформации);
		КонецЕсли;
		КонтактнаяИнформацияСлужебный.КомментарийКонтактнойИнформации(КонтактнаяИнфо, Комментарий);
		КонтактнаяИнфо = КонтактнаяИнформацияСлужебный.СериализацияКонтактнойИнформации(КонтактнаяИнфо);
		
	ИначеЕсли КонтактнаяИнформацияКлиентСервер.ЭтоКонтактнаяИнформацияВXML(КонтактнаяИнфо) Тогда
		КонтактнаяИнформацияСлужебный.КомментарийКонтактнойИнформации(КонтактнаяИнфо, Комментарий);
	КонецЕсли;
	
	Возврат Новый Структура("КонтактнаяИнформация, Представление, Комментарий",
		КонтактнаяИнфо, Параметры.Представление, Комментарий);
КонецФункции

// Заполняет реквизиты формы из XTDO объекта типа "Контактная информация"
&НаСервере
Процедура ЗначениеРеквизитовПоКонтактнойИнформации(РедактируемаяИнформация)
	
	Телефон = РедактируемаяИнформация.Состав;
	
	// Общие реквизиты
	Представление = РедактируемаяИнформация.Представление;
	Комментарий   = РедактируемаяИнформация.Комментарий;
	
	// Копия комментария для анализа измененности
	КопияКомментария = Комментарий;
	
	КодСтраны     = Телефон.КодСтраны;
	КодГорода     = Телефон.КодГорода;
	НомерТелефона = Телефон.Номер;
	Добавочный    = Телефон.Добавочный;
	
КонецПроцедуры

// Возвращает XTDO объект типа "Контактная информация" по значению реквизитов
&НаСервере
Функция КонтактнаяИнформацияПоЗначениюРеквизитов()
	ПространствоИмен = КонтактнаяИнформацияКлиентСерверПовтИсп.ПространствоИмен();
	
	Результат = ФабрикаXDTO.Создать( ФабрикаXDTO.Тип(ПространствоИмен, "КонтактнаяИнформация") );
	
	Если ТипКонтактнойИнформации=Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Данные = ФабрикаXDTO.Создать( ФабрикаXDTO.Тип(ПространствоИмен, "НомерТелефона") );
		Данные.КодСтраны  = КодСтраны;
		Данные.КодГорода  = КодГорода;
		Данные.Номер      = НомерТелефона;
		Данные.Добавочный = Добавочный;
		Результат.Представление = КонтактнаяИнформацияСлужебный.ПредставлениеТелефона(Данные);
	Иначе        
		Данные = ФабрикаXDTO.Создать( ФабрикаXDTO.Тип(ПространствоИмен, "НомерФакса") );
		Данные.КодСтраны  = КодСтраны;
		Данные.КодГорода  = КодГорода;
		Данные.Номер      = НомерТелефона;
		Данные.Добавочный = Добавочный;
		Результат.Представление = КонтактнаяИнформацияСлужебный.ПредставлениеФакса(Данные);
	КонецЕсли;
	
	Результат.Состав      = Данные;
	Результат.Комментарий = Комментарий;
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаполнитьПредставлениеТелефона(XDTOКонтактная=Неопределено)
	Инфо = ?(XDTOКонтактная=Неопределено, КонтактнаяИнформацияПоЗначениюРеквизитов(), XDTOКонтактная);
	Представление = Инфо.Представление;
КонецПроцедуры    

// Возвращает список ошибок заполнения в виде списка значений:
//      Представление   - описание ошибки
//      Значение        - XPath для поля
&НаСервере
Функция ОшибкиЗаполненияТелефонаСервер() 
	Возврат Новый СписокЗначений();
КонецФункции    

// Сообщает об ошибках заполнения по результату функции ОшибкиЗаполненияТелефонаСервер
&НаКлиенте
Процедура СообщитьОбОшибкахЗаполнения(СписокОшибок)
	
	Если СписокОшибок.Количество()=0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Телефон введен корректно.'"));
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	// Значение - XPath, представление - описание ошибки
	Для Каждого Элемент Из СписокОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Элемент.Представление,,,
		ПутьКДаннымФормыПоПутиXPath(Элемент.Значение));
	КонецЦикла;
	
КонецПроцедуры    

&НаКлиенте 
Функция ПутьКДаннымФормыПоПутиXPath(ПутьXPath) 
	Возврат ПутьXPath;
КонецФункции

&НаСервере
Процедура ОчиститьТелефонСервер()
	КодСтраны     = "";
	КодГорода     = "";
	НомерТелефона = "";
	Добавочный    = "";
	Комментарий   = "";
	
	ЗаполнитьПредставлениеТелефона();
	Модифицированность = Истина;
КонецПроцедуры


#КонецОбласти
