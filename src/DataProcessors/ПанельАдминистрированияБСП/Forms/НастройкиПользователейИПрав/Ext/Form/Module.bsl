&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Настройки видимости при запуске
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УпрощенныйИнтерфейс = УправлениеДоступомСлужебный.УпрощенныйИнтерфейсНастройкиПравДоступа();
	Элементы.ГруппыДоступа.Видимость       = НЕ УпрощенныйИнтерфейс;
	Элементы.ГруппыПользователей.Видимость = НЕ УпрощенныйИнтерфейс;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Если РежимРаботы.МодельСервиса Тогда
		// СтандартныеПодсистемы.Взаимодействия
		Элементы.АдресПубликацииИнформационнойБазыВИнтернете.Видимость          = Ложь;
		Элементы.ПояснениеАдресПубликацииИнформационнойБазыВИнтернете.Видимость = Ложь;
		// Конец СтандартныеПодсистемы.Взаимодействия
		
		// СтандартныеПодсистемы.Пользователи
		Элементы.НастройкаВнешнихПользователей.Видимость = Ложь;
		// Конец СтандартныеПодсистемы.Пользователи
	КонецЕсли;
	
	// Обновление состояния элементов
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// СтандартныеПодсистемы.УправлениеДоступом
&НаКлиенте
Процедура ИспользоватьГруппыПользователейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.УправлениеДоступом
&НаКлиенте
Процедура ОграничиватьДоступНаУровнеЗаписейПриИзменении(Элемент)
	
	Если НаборКонстант.ОграничиватьДоступНаУровнеЗаписей Тогда
		
		ТекстВопроса =
			НСтр("ru = 'Включить ограничение доступа на уровне записей?
			           |
			           |Потребуется заполнение данных, которое будет выполняться частями
			           |регламентным заданием ""Заполнение данных для ограничения доступа""
			           |(ход выполнения в журнале регистрации).
			           |
			           |Выполнение может сильно замедлить работу программы и выполняться
			           |от нескольких секунд до многих часов (в зависимости от объема данных).'");
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения(
				"ОграничиватьДоступНаУровнеЗаписейПриИзмененииЗавершение",
				ЭтотОбъект,
				Элемент),
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет);
	Иначе
		Подключаемый_ПриИзмененииРеквизита(Элемент);
		// _Демо начало примера
		Если НаборКонстант._ДемоОграничиватьДоступПоПартнерам Тогда
			НаборКонстант._ДемоОграничиватьДоступПоПартнерам = Ложь;
			Подключаемый_ПриИзмененииРеквизита(Элементы._ДемоОграничиватьДоступПоПартнерам);
		КонецЕсли;
		Если НаборКонстант._ДемоОграничиватьДоступПоНоменклатуре Тогда
			НаборКонстант._ДемоОграничиватьДоступПоНоменклатуре = Ложь;
			Подключаемый_ПриИзмененииРеквизита(Элементы._ДемоОграничиватьДоступПоНоменклатуре);
		КонецЕсли;
		Если НаборКонстант._ДемоОграничиватьДоступПоФизическимЛицам Тогда
			НаборКонстант._ДемоОграничиватьДоступПоФизическимЛицам = Ложь;
			Подключаемый_ПриИзмененииРеквизита(Элементы._ДемоОграничиватьДоступПоФизическимЛицам);
		КонецЕсли;
		// _Демо конец примера
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.Пользователи
&НаКлиенте
Процедура ИспользоватьВнешнихПользователейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Пользователи

// СтандартныеПодсистемы.Взаимодействия
&НаКлиенте
Процедура АдресПубликацииИнформационнойБазыВИнтернетеПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Взаимодействия

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Пользователи
&НаКлиенте
Процедура СправочникВнешниеПользователи(Команда)
	ОткрытьФорму("Справочник.ВнешниеПользователи.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Пользователи

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	СтандартныеПодсистемыКлиент.ПоказатьРезультатВыполнения(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом
&НаКлиенте
Процедура ОграничиватьДоступНаУровнеЗаписейПриИзмененииЗавершение(Ответ, Элемент) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		НаборКонстант.ОграничиватьДоступНаУровнеЗаписей = Ложь;
	Иначе
		Подключаемый_ПриИзмененииРеквизита(Элемент);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.УправлениеДоступом

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Процедура СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат;
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		СтандартныеПодсистемыКлиентСервер.РезультатВыполненияДобавитьОповещениеОткрытыхФорм(Результат, "Запись_НаборКонстант", Новый Структура, КонстантаИмя);
		// СтандартныеПодсистемы.ВариантыОтчетов
		ВариантыОтчетов.ДобавитьОповещениеПриИзмененииЗначенияКонстанты(Результат, КонстантаМенеджер);
		// Конец СтандартныеПодсистемы.ВариантыОтчетов
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	// СтандартныеПодсистемы.Пользователи
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьВнешнихПользователей" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.ОткрытьВнешниеПользователи.Доступность = НаборКонстант.ИспользоватьВнешнихПользователей;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Пользователи
	
	// СтандартныеПодсистемы.Взаимодействия
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьВнешнихПользователей" ИЛИ РеквизитПутьКДанным = "" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АдресПубликацииИнформационнойБазыВИнтернете", "Доступность", НаборКонстант.ИспользоватьВнешнихПользователей);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Взаимодействия
	
	// _Демо начало примера
	Если РеквизитПутьКДанным = "НаборКонстант.ОграничиватьДоступНаУровнеЗаписей" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы._ДемоОграничиватьДоступПоПартнерам.Доступность       = НаборКонстант.ОграничиватьДоступНаУровнеЗаписей;
		Элементы._ДемоОграничиватьДоступПоНоменклатуре.Доступность    = НаборКонстант.ОграничиватьДоступНаУровнеЗаписей;
		Элементы._ДемоОграничиватьДоступПоФизическимЛицам.Доступность = НаборКонстант.ОграничиватьДоступНаУровнеЗаписей;
	КонецЕсли;
	Если РеквизитПутьКДанным = "НаборКонстант._ДемоОграничиватьДоступПоПартнерам" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы._ДемоОткрытьГруппыДоступаПартнеров.Доступность = НаборКонстант._ДемоОграничиватьДоступПоПартнерам;
	КонецЕсли;
	Если РеквизитПутьКДанным = "НаборКонстант._ДемоОграничиватьДоступПоНоменклатуре" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы._ДемоОткрытьГруппыДоступаНоменклатуры.Доступность = НаборКонстант._ДемоОграничиватьДоступПоНоменклатуре;
	КонецЕсли;
	// _Демо конец примера
	
КонецПроцедуры

#КонецОбласти
