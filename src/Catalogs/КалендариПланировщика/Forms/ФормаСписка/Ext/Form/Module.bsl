////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ

&НаСервере
Процедура ИнициализацияФормы()
	// Владелец
	ОтборПоВладельцу = Параметры.Отбор.Свойство("Владелец");
	
	Если ОтборПоВладельцу Тогда
		ТекущийПользователь = Параметры.Отбор.Владелец;
	Иначе 
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Владелец", ТекущийПользователь, ВидСравненияКомпоновкиДанных.Равно, "", Истина);
	Элементы.Владелец.Видимость = Ложь;
	
	//// Интеграция с Google
	//ИспользоватьGoogle = ПолучитьФункциональнуюОпцию("ИспользоватьИнтеграциюСGoogle");
	//
	//Элементы.ФормаЗагрузитьСGoogle.Видимость	= ИспользоватьGoogle;
	//Элементы.СинхронизацияСGoogle.Видимость		= ИспользоватьGoogle;
	//Элементы.GoogleSummary.Видимость			= ИспользоватьGoogle;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализацияФормы();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьСGoogle(Команда)
	//ПараметрыПодключения = АвторизацияOAuth2КлиентСервер.ПолучитьПараметрыПодключения(ТекущийПользователь, "google");
	//Если НЕ АвторизацияOAuth2КлиентСервер.ЭтоПараметрыПодключения(ПараметрыПодключения) Тогда
	//	АвторизацияOAuth2Клиент.СообщитьОбОшибкеАвторизации();
	//	Возврат;
	//КонецЕсли;
	//
	//КалендариGoogle = ОбменСGoogleКлиентСервер.ПолучитьКалендариССервераGoogle(ПараметрыПодключения);
	//Если КалендариGoogle.Количество() = 0 Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось получить список календарей с сервера.");
	//	Возврат;
	//КонецЕсли;
	//
	//МассивКалендарей = ПолучитьНезагруженныеКалендариНаСервере(КалендариGoogle, ТекущийПользователь);
	//
	//СписокКалендарей = Новый СписокЗначений;
	//Для Каждого СтруктураКалендаря Из МассивКалендарей Цикл
	//	СписокКалендарей.Добавить(СтруктураКалендаря.Значение, СтруктураКалендаря.Представление);
	//КонецЦикла;
	//	
	//Результат = СписокКалендарей.ОтметитьЭлементы("Выберите календари для загрузки...");
	//Если НЕ Результат Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Для Каждого ЭлементСписка Из СписокКалендарей Цикл
	//	Если НЕ ЭлементСписка.Пометка Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	КалендарьСсылка = ИнтеграцияСGoogleВызовСервера.ДобавитьКалендарьПоДаннымGoogle(ЭлементСписка.Значение, ПараметрыПодключения);
	//КонецЦикла;
	//
	//Если ЗначениеЗаполнено(КалендарьСсылка) Тогда
	//	Элементы.Список.ТекущаяСтрока = КалендарьСсылка;
	//КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ МЕТОДЫ

&НаСервереБезКонтекста
Функция ПолучитьНезагруженныеКалендариНаСервере(Массив, ТекущийПользователь)
	
	//НовыеКалендари = Новый Массив;
	//
	//ЗагруженныеРанее = ПолучитьЗагруженныеЭлементы(ТекущийПользователь);
	//Для Каждого СтрокаXML Из Массив Цикл
	//	Соответствие = ОбменСGoogle.ДесериализоватьДанныеКалендаряGoogle(СтрокаXML);
	//	
	//	Если ЗагруженныеРанее.Найти(Соответствие.Получить("id")) = Неопределено Тогда
	//		НовыеКалендари.Добавить(Новый Структура("Значение, Представление", СтрокаXML, Соответствие.Получить("summary")));
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Возврат НовыеКалендари;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗагруженныеЭлементы(ТекущийПользователь)
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Владелец", ТекущийПользователь);
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	КалендариПланировщика.Ссылка,
	//|	ДанныеСинхронизации.GoogleId,
	//|	ДанныеСинхронизации.GoogleSummary
	//|ИЗ
	//|	Справочник.КалендариПланировщика КАК КалендариПланировщика
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеИнтеграцииСGoogle КАК ДанныеСинхронизации
	//|		ПО КалендариПланировщика.Ссылка = ДанныеСинхронизации.Объект
	//|ГДЕ
	//|	КалендариПланировщика.СинхронизацияСGoogle
	//|	И КалендариПланировщика.Владелец = &Владелец";
	//Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("GoogleId");
КонецФункции
