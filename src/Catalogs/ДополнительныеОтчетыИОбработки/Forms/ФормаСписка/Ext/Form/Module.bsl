#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	Если Параметры.Свойство("Отображение") Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы[Параметры.Отображение];
	КонецЕсли;
	
	СписокВыбора = Элементы.ПубликацияОтбор.СписокВыбора;
	СписокВыбора.Добавить(Неопределено, " "); // НСтр("ru = 'Все'")
	
	ВидИспользуется = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется;
	ВидОтключена = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Отключена;
	ВидРежимОтладки = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.РежимОтладки;
	
	ДоступныеВидыПубликации = ДополнительныеОтчетыИОбработкиПовтИсп.ДоступныеВидыПубликации();
	
	ВсеПубликацииКромеНеиспользующихся = Новый Массив;
	ВсеПубликацииКромеНеиспользующихся.Добавить(ВидИспользуется);
	Если ДоступныеВидыПубликации.Найти(ВидРежимОтладки) <> Неопределено Тогда
		ВсеПубликацииКромеНеиспользующихся.Добавить(ВидРежимОтладки);
	КонецЕсли;
	
	Если ВсеПубликацииКромеНеиспользующихся.Количество() > 1 Тогда
		
		ПредставлениеМассива = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 или %2'"),
			Строка(ВсеПубликацииКромеНеиспользующихся[0]),
			Строка(ВсеПубликацииКромеНеиспользующихся[1]));
		
		СписокВыбора.Добавить(1, ПредставлениеМассива);
		
	КонецЕсли;
	
	Для Каждого ЗначениеПеречисления Из Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок Цикл
		Если ДоступныеВидыПубликации.Найти(ЗначениеПеречисления) <> Неопределено Тогда
			СписокВыбора.Добавить(ЗначениеПеречисления, Строка(ЗначениеПеречисления));
		КонецЕсли;
	КонецЦикла;
	
	СписокВыбора = Элементы.ВидОтбор.СписокВыбора;
	СписокВыбора.Добавить(Неопределено, " "); //НСтр("ru = 'Все отчеты и обработки'")
	СписокВыбора.Добавить(1, НСтр("ru = 'Только отчеты'"));
	СписокВыбора.Добавить(2, НСтр("ru = 'Только обработки'"));
	Для Каждого ЗначениеПеречисления Из Перечисления.ВидыДополнительныхОтчетовИОбработок Цикл
		СписокВыбора.Добавить(ЗначениеПеречисления, Строка(ЗначениеПеречисления));
	КонецЦикла;
	
	ВидыДопОтчетов = Новый Массив;
	ВидыДопОтчетов.Добавить(Перечисления.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет);
	ВидыДопОтчетов.Добавить(Перечисления.ВидыДополнительныхОтчетовИОбработок.Отчет);
	
	Список.Параметры.УстановитьЗначениеПараметра("ПубликацияОтбор", ПубликацияОтбор);
	Список.Параметры.УстановитьЗначениеПараметра("ВидОтбор",        ВидОтбор);
	Список.Параметры.УстановитьЗначениеПараметра("ВидыДопОтчетов",  ВидыДопОтчетов);
	Список.Параметры.УстановитьЗначениеПараметра("ВсеПубликацииКромеНеиспользующихся", ВсеПубликацииКромеНеиспользующихся);
	
	Элементы.КнопкиДобавления.Видимость = ДополнительныеОтчетыИОбработки.ПравоДобавления();
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов") Тогда
		Элементы.ИзменитьВыделенные.Видимость = Ложь;
		Элементы.ИзменитьВыделенныеСписок.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПроверкаДополнительныхОтчетовИОбработок") Тогда
		Элементы.Создать.Видимость = Ложь;
		Элементы.СоздатьГруппу.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ПубликацияОтбор = Настройки.Получить("ПубликацияОтбор");
	ВидОтбор        = Настройки.Получить("ВидОтбор");
	Список.Параметры.УстановитьЗначениеПараметра("ПубликацияОтбор", ПубликацияОтбор);
	Список.Параметры.УстановитьЗначениеПараметра("ВидОтбор",        ВидОтбор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПубликацияОтборПриИзменении(Элемент)
	ЗначениеПараметраКД = Список.Параметры.Элементы.Найти("ПубликацияОтбор");
	Если ЗначениеПараметраКД.Значение <> ПубликацияОтбор Тогда
		ЗначениеПараметраКД.Значение = ПубликацияОтбор;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОтборПриИзменении(Элемент)
	ЗначениеПараметраКД = Список.Параметры.Элементы.Найти("ВидОтбор");
	Если ЗначениеПараметраКД.Значение <> ВидОтбор Тогда
		ЗначениеПараметраКД.Значение = ВидОтбор;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)
	ДанныеСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Или Не ВыбранЭлемент(ДанныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("Ссылка",   ДанныеСтроки.Ссылка);
	ПараметрыВыгрузки.Вставить("ЭтоОтчет", ДанныеСтроки.ЭтоОтчет);
	ПараметрыВыгрузки.Вставить("ИмяФайла", ДанныеСтроки.ИмяФайла);
	ДополнительныеОтчетыИОбработкиКлиент.ВыгрузитьВФайл(ПараметрыВыгрузки);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлОбработкиОтчета(Команда)
	ДанныеСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Или Не ВыбранЭлемент(ДанныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ДанныеСтроки.Ссылка);
	ПараметрыФормы.Вставить("ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии", Истина);
	ОткрытьФорму("Справочник.ДополнительныеОтчетыИОбработки.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	МодульГрупповоеИзменениеОбъектовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ГрупповоеИзменениеОбъектовКлиент");
	МодульГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура ПубликацияИспользуется(Команда)
	ИзменитьПубликацию("Используется");
КонецПроцедуры

&НаКлиенте
Процедура ПубликацияОтключена(Команда)
	ИзменитьПубликацию("Отключена");
КонецПроцедуры

&НаКлиенте
Процедура ПубликацияРежимОтладки(Команда)
	ИзменитьПубликацию("РежимОтладки");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ВыбранЭлемент(ДанныеСтроки)
	Если ТипЗнч(ДанныеСтроки.Ссылка) <> Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта.
			|Выберите дополнительный отчет или обработку.'"));
		Возврат Ложь;
	КонецЕсли;
	Если ДанныеСтроки.ЭтоГруппа Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для группы.
			|Выберите дополнительный отчет или обработку.'"));
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьФайлОбработкиОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = "ФайлЗагружен" Тогда
		ПоказатьЗначение(,Элементы.Список.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Публикация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.РежимОтладки;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Публикация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Отключена;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПубликацию(ВариантПубликации)
	
	ОчиститьСообщения();
	Результат = ИзменениеПубликации(ВариантПубликации);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		СтандартныеПодсистемыКлиент.ПоказатьРезультатВыполнения(ЭтотОбъект, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИзменениеПубликации(ВариантПубликации)
	
	НовыйРезультатВыполнения = СтандартныеПодсистемыКлиентСервер.НовыйРезультатВыполнения();
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран ни один дополнительный отчет (обработка)'");
		ВыводПредупреждения = НовыйРезультатВыполнения.ВыводПредупреждения;
		ВыводПредупреждения.Использование = Истина;
		ВыводПредупреждения.Текст = ТекстСообщения;
		Возврат НовыйРезультатВыполнения;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ВыделеннаяСтрока);
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ВыводПредупреждения = НовыйРезультатВыполнения.ВыводПредупреждения;
			ВыводПредупреждения.Использование = Истина;
			ВыводПредупреждения.Текст = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
			
			Элементы.Список.Обновить();
			Возврат НовыйРезультатВыполнения;
		КонецПопытки;
		
		НачатьТранзакцию();
		
		Объект = ВыделеннаяСтрока.ПолучитьОбъект();
		Если ВариантПубликации = "Используется" Тогда
			Объект.Публикация = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется;
		ИначеЕсли ВариантПубликации = "РежимОтладки" Тогда
			Объект.Публикация = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.РежимОтладки;
		Иначе
			Объект.Публикация = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Отключена;
		КонецЕсли;
		
		Объект.ДополнительныеСвойства.Вставить("ПроверкаСписка");
		Если Не Объект.ПроверитьЗаполнение() Тогда
			ОтменитьТранзакцию();
			Элементы.Список.Обновить();
			
			ПредставлениеОшибки = "";
			МассивСообщений = ПолучитьСообщенияПользователю(Истина);
			Для Каждого СообщениеПользователю Из МассивСообщений Цикл
				ПредставлениеОшибки = ПредставлениеОшибки + СообщениеПользователю.Текст + Символы.ПС;
			КонецЦикла;
			
			РазблокироватьДанныеДляРедактирования(ВыделеннаяСтрока);
			
			ВыводПредупреждения = НовыйРезультатВыполнения.ВыводПредупреждения;
			ВыводПредупреждения.Использование = Истина;
			ВыводПредупреждения.Текст = ПредставлениеОшибки;
			Возврат НовыйРезультатВыполнения;
		КонецЕсли;
		
		Объект.Записать();
		
		ЗафиксироватьТранзакцию();
		РазблокироватьДанныеДляРедактирования(ВыделеннаяСтрока);
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
	Если ВыделенныеСтроки.Количество() = 1 Тогда
		ИмяОбъекта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыделенныеСтроки[0], "Наименование");
		ТекстСообщения = НСтр("ru = 'Изменена публикация дополнительного отчета (обработки) ""%1""'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ИмяОбъекта);
	Иначе
		ТекстСообщения = НСтр("ru = 'Изменена публикация у %1 дополнительных отчетов (обработок)'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ВыделенныеСтроки.Количество());
	КонецЕсли;
	
	ВыводОповещения = НовыйРезультатВыполнения.ВыводОповещения;
	ВыводОповещения.Использование = Истина;
	ВыводОповещения.Текст = ТекстСообщения;
	ВыводОповещения.Заголовок = НСтр("ru = 'Изменена публикация'");
	
	Возврат НовыйРезультатВыполнения;
	
КонецФункции

#КонецОбласти
