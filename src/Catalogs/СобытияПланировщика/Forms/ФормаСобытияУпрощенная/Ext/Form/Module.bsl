#Область УправлениеФормой

&НаСервере
Процедура ИнициализацияФормы()
	Если НЕ Ссылка.Пустая() Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Владелец, ВесьДень, Наименование, НачалоСобытия, ОкончаниеСобытия, Календарь");
		
		Исполнитель			= Реквизиты.Владелец;
		Наименование		= Реквизиты.Наименование;
		НачалоСобытия		= Реквизиты.НачалоСобытия;
		ОкончаниеСобытия	= Реквизиты.ОкончаниеСобытия;
		Календарь			= Реквизиты.Календарь;
		ВесьДень			= Реквизиты.ВесьДень;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Исполнитель) Тогда
		Исполнитель = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Календарь) Тогда
		Календарь = ПланировщикДанные.ПолучитьОсновнойКалендарьПользователя(Исполнитель);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция СформироватьПредставлениеПериода()
	Элементы.ПредставлениеПериода.Заголовок = ПланировщикДанныеКлиентСервер.ПолучитьПредставлениеПериода(НачалоСобытия, ОкончаниеСобытия, ВесьДень);
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Ссылка = Параметры.СобытиеСсылка;
	
	// заполнение из данных заполнения
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	// считывание данных по ссылке
	ИнициализацияФормы();
	
	// установка начала и окончание периода экземпляра
	Если Параметры.НачалоЭкземпляра <> Дата(1, 1, 1) Тогда
		НачалоСобытия = Параметры.НачалоЭкземпляра;
	КонецЕсли;
	Если Параметры.КонецЭкземпляра <> Дата(1, 1, 1) Тогда
		ОкончаниеСобытия = Параметры.КонецЭкземпляра;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СформироватьПредставлениеПериода();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьСобытие(Команда)
	ЭлементСсылка = СоздатьСобытиеНаСервере();
	
	Если ЭлементСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Исполнитель"		, Исполнитель);
	ПараметрыОповещения.Вставить("НачалоСобытия"	, НачалоСобытия);
	ПараметрыОповещения.Вставить("ОкончаниеСобытия"	, ОкончаниеСобытия);
	ПараметрыОповещения.Вставить("Участники"		, Новый Массив);
	
	Оповестить("ПослеЗаписиСобытияПланировщика", ПараметрыОповещения, ЭлементСсылка);
	
	ЭтотОбъект.Закрыть(ЭлементСсылка);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьМероприятие(Команда)
	ЗначенияЗаполнения = Новый Структура("НачалоСобытия, ОкончаниеСобытия, Наименование, Календарь, ВесьДень, Исполнитель",
		НачалоСобытия, ОкончаниеСобытия, Наименование, Календарь, ВесьДень, Исполнитель);
	
	ОткрытьФорму("Справочник.СобытияПланировщика.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), ЭтотОбъект);
	
	ЭтотОбъект.Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СоздатьСобытиеНаСервере()
	Структура = ПланировщикДанныеКлиентСервер.ПолучитьСтруктуруСобытия();
	Структура.Владелец			= Исполнитель;
	Структура.Наименование		= Наименование;
	Структура.Календарь			= Календарь;
	Структура.НачалоСобытия		= НачалоСобытия;
	Структура.ОкончаниеСобытия	= ОкончаниеСобытия;
	
	СобытиеСсылка = Справочники.СобытияПланировщика.СоздатьСобытие(Структура);
	
	Возврат СобытиеСсылка;
КонецФункции

#КонецОбласти
