&НаСервере
Функция НайтиСобытиеКалендаряПоЗадаче(ЗадачаСсылка, ПользовательСсылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗадачаИсполнителя", ЗадачаСсылка);
	Запрос.УстановитьПараметр("Владелец", ПользовательСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СобытияПланировщика.Ссылка
	|ИЗ
	|	Справочник.СобытияПланировщика КАК СобытияПланировщика
	|ГДЕ
	|	СобытияПланировщика.ЗадачаИсполнителя = &ЗадачаИсполнителя
	|	И НЕ СобытияПланировщика.ПометкаУдаления
	|	И СобытияПланировщика.Владелец = &Владелец";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе 
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();  
		Возврат Выборка.Ссылка;
	КонецЕсли;
КонецФункции

&НаКлиенте 
Процедура ДобавитьСобытиеРежимПодбора(ЗадачаСсылка, ПользовательСсылка, ПараметрыВыполненияКоманды)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидКалендаря"		, 1);
	ПараметрыФормы.Вставить("ДатаКалендаря"		, ОбщегоНазначенияКлиент.ДатаСеанса());
	ПараметрыФормы.Вставить("Пользователь"		, ПользовательСсылка);
	ПараметрыФормы.Вставить("РежимПодбора"		, Истина);
	ПараметрыФормы.Вставить("ЗадачаИсполнителя"	, ЗадачаСсылка);
	
	ОткрытьФорму("Обработка.ПланировщикИнтерфейс.Форма", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	СобытиеСсылка = НайтиСобытиеКалендаряПоЗадаче(ПараметрКоманды, ТекПользователь);
	Если ЗначениеЗаполнено(СобытиеСсылка) Тогда
		ДопПараметры = Новый Структура("Задача, Пользователь, Событие, ПараметрыВыполненияКоманды", ПараметрКоманды, ТекПользователь, СобытиеСсылка, ПараметрыВыполненияКоманды);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтотОбъект, ДопПараметры);
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Создать новое событие'"));  
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Открыть существующее'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отмена'"));
		
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Для данной задачи запланировано событие в календаре.
		|Выберите дальнейшее действие.'"), Кнопки,, КодВозвратаДиалога.Нет,, КодВозвратаДиалога.Отмена);
	Иначе 
		ДобавитьСобытиеРежимПодбора(ПараметрКоманды, ТекПользователь, ПараметрыВыполненияКоманды);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработкаКомандыЗавершение(РезультатВыбора, ДопПараметры) Экспорт 
	Если РезультатВыбора = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатВыбора = КодВозвратаДиалога.Нет Тогда
		ПоказатьЗначение(, ДопПараметры.Событие);
	Иначе 
		ДобавитьСобытиеРежимПодбора(ДопПараметры.Задача, ДопПараметры.Пользователь, ДопПараметры.ПараметрыВыполненияКоманды);
	КонецЕсли;
	
КонецПроцедуры

