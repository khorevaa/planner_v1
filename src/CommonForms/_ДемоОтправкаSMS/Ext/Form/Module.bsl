
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Элементы.Статус.Заголовок = СтатусДоставки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИдентификаторСообщенияПриИзменении(Элемент)
	
	ОтключитьОбработчикОжидания("ПроверитьСтатусДоставки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	// проверка заполнения
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	// отправка из серверного контекста
	ОтправитьSMS();

	// проверка статуса отправки
	Если Не ПустаяСтрока(ИдентификаторСообщения) Тогда 
		ПроверитьСтатусДоставки();
		ПоказатьПредупреждение(, НСтр("ru = 'Сообщение отправлено'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	ПроверитьСтатусДоставки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтправитьSMS()
	
	// сброс отображаемого статуса доставки
	ИдентификаторСообщения = "";
	
	// подготовка номеров получателей
	МассивНомеров = СтрокиТекстаВМассив(НомераПолучателей);
	
	// отправка
	РезультатОтправки = ОтправкаSMS.ОтправитьSMS(МассивНомеров, Текст, ИмяОтправителя, ОтправлятьВТранслите);
	
	// проверка доставки для первого получателя
	Если РезультатОтправки.ОтправленныеСообщения.Количество() > 0 Тогда
		ИдентификаторСообщения = РезультатОтправки.ОтправленныеСообщения[0].ИдентификаторСообщения;
	КонецЕсли;
	
	// вывод идентификаторов отправленных SMS
	Для Каждого ОтправленноеСообщение Из РезультатОтправки.ОтправленныеСообщения Цикл
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер: %1, ID: %2'"),
			ОтправленноеСообщение.НомерПолучателя, ОтправленноеСообщение.ИдентификаторСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЦикла;
	
	// вывод информации об ошибках в процессе отправки
	Если Не ПустаяСтрока(РезультатОтправки.ОписаниеОшибки) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатОтправки.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСтатусДоставки()
	
	ОтключитьОбработчикОжидания("ПроверитьСтатусДоставки");;
	СтатусДоставки = СтатусДоставки();
	Элементы.Статус.Заголовок = СтатусДоставки;
	
	// повтор проверки статуса доставки, если статус еще может измениться
	Если СтатусДоставки = "Отправляется" Или СтатусДоставки = "Отправлено" Тогда
		ПодключитьОбработчикОжидания("ПроверитьСтатусДоставки", 10, Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СтатусДоставки()
	
	СтатусыДоставки = Новый Соответствие;
	СтатусыДоставки.Вставить("Ошибка", НСтр("ru = 'Произошла ошибка при подключении к провайдеру'"));
	СтатусыДоставки.Вставить("НеОтправлялось", НСтр("ru = 'Не отправлялось'"));
	СтатусыДоставки.Вставить("Отправляется", НСтр("ru = 'Отправляется'"));
	СтатусыДоставки.Вставить("Отправлено", НСтр("ru = 'Отправлено'"));
	СтатусыДоставки.Вставить("НеОтправлено", НСтр("ru = 'Не отправлено'"));
	СтатусыДоставки.Вставить("Доставлено", НСтр("ru = 'Доставлено'"));
	СтатусыДоставки.Вставить("НеДоставлено", НСтр("ru = 'Не доставлено'"));
	
	СтатусДоставки = ОтправкаSMS.СтатусДоставки(ИдентификаторСообщения);
	
	Результат = СтатусыДоставки[СтатусДоставки];
	Если Результат = Неопределено Тогда
		Результат = СтатусДоставки;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СтрокиТекстаВМассив(Текст)
	
	Результат = Новый Массив;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(Текст);
	
	Для НомерСтроки = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		Строка = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		Если Не ПустаяСтрока(Строка) Тогда
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
