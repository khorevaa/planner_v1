
Процедура ОбработатьТаблицуЗаписей(НаборДанных) Экспорт
	
	ПустойИдентификатор = ПланировщикКлиентСервер.ПустойИдентификатор();
	Для Каждого ЗаписьНабора Из НаборДанных Цикл
		Если ЗаписьНабора.Идентификатор = ПустойИдентификатор Тогда
			ЗаписьНабора.Идентификатор = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		Если ЗаписьНабора.ВидИнтервала = 5 Тогда
			ЗаписьНабора.Интервал = Мин(ЗаписьНабора.Интервал, 3);
			
			ДлинаИнтервала = 30*86400;
		ИначеЕсли ЗаписьНабора.ВидИнтервала = 4 Тогда
			ЗаписьНабора.Интервал = Мин(ЗаписьНабора.Интервал, 8);
			
			ДлинаИнтервала = ПланировщикКлиентСервер.НеделяВСекундах();
		ИначеЕсли ЗаписьНабора.ВидИнтервала = 3 Тогда
			ЗаписьНабора.Интервал = Мин(ЗаписьНабора.Интервал, 28);
			
			ДлинаИнтервала = ПланировщикКлиентСервер.ДеньВСекундах();
		ИначеЕсли ЗаписьНабора.ВидИнтервала = 2 Тогда
			ЗаписьНабора.Интервал = Мин(ЗаписьНабора.Интервал, 23);
			
			ДлинаИнтервала = ПланировщикКлиентСервер.ЧасВСекундах();
		Иначе 
			ЗаписьНабора.Интервал = Мин(ЗаписьНабора.Интервал, 59);
			
			ДлинаИнтервала = 60;
		КонецЕсли;
		
		ЗаписьНабора.ИнтервалСекунды = ЗаписьНабора.Интервал * ДлинаИнтервала;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьЗапись(Отказ, СобытиеСсылка, ПользовательСсылка = Неопределено, ТаблицаДанных) Экспорт
	
	Если ТаблицаДанных.Колонки.Найти("ИнтервалСекунды") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("ИнтервалСекунды", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15)));
	КонецЕсли;
	
	ОбработатьТаблицуЗаписей(ТаблицаДанных);
	
	Попытка
		// Блокируем данные для записи
		Блокировка = Новый БлокировкаДанных;
		
		Элемент = Блокировка.Добавить("РегистрСведений.НапоминанияСобытийПланировщика");
		Элемент.Режим = РежимБлокировкиДанных.Исключительный;
		Элемент.УстановитьЗначение("Событие", СобытиеСсылка);
		Если ЗначениеЗаполнено(ПользовательСсылка) Тогда
			Элемент.УстановитьЗначение("Пользователь", ПользовательСсылка);
		КонецЕсли;
		
		Блокировка.Заблокировать();
		
		// Считываем записи и заполняем их вновь
		НаборЗаписей = РегистрыСведений.НапоминанияСобытийПланировщика.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Событие.Установить(СобытиеСсылка);
		Если ЗначениеЗаполнено(ПользовательСсылка) Тогда
			НаборЗаписей.Отбор.Пользователь.Установить(ПользовательСсылка);
		КонецЕсли;
		
		НаборЗаписей.Прочитать();
		
		// Очищаем существующие записи
		НаборЗаписей.Очистить();
		
		// Добавляем новые строки
		Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
			ЗаписьРегистра = НаборЗаписей.Добавить();
			ЗаписьРегистра.Событие		= СобытиеСсылка;
			ЗаписьРегистра.Пользователь = ПользовательСсылка;
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра, СтрокаТаблицы);
			
			Если ЗаписьРегистра.Идентификатор = ПланировщикКлиентСервер.ПустойИдентификатор() Тогда
				ЗаписьРегистра.Идентификатор = Новый УникальныйИдентификатор;
			КонецЕсли;
		КонецЦикла;                      
		
		// Записываем набор
		НаборЗаписей.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры